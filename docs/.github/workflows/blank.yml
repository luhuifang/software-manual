# This is a basic workflow to help you get started with Actions

name: Generate softmanual of SAW and StereoMap

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  # push:
  #   branches: [ "main" ]
  # pull_request:
  #   branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
    inputs:
      branch:
        description: "选择分支"
        required: true

      repo:
        description: "指定将静态文件上传到哪个仓库，不修改则上传到默认仓库"
        required: false
        default: "https://github.com/luhuifang/software-manul.git"


env:
  ROOT_DIR: /Users/huifang/github/build_software_manual
  NODE_MODULES_DIR: /Users/huifang/github/node_modules
  GITBOOK: /Users/huifang/.nvm/versions/node/v16.16.0/bin/gitbook

defaults:
  run:
    shell: bash
    working-directory: /Users/huifang/github/build_software_manual

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  Headworks:
    # The type of runner that the job will run on
    runs-on: self-hosted

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      # - uses: actions/checkout@${{ inputs.branch }}

      # # Enter directory of codes
      # - name: Enter dir
      #   run: mkdir -p $ROOT_DIR && cd $ROOT_DIR

      # PWD
      - name: PWD
        run: |
          pwd
          echo branch ${{ inputs.branch }}
          echo repo ${{ inputs.repo }}
      
      # Clear all 
      - name: Clear all
        run: rm -rf *
  

  Get_software_repo:
    # The type of runner that the job will run on
    runs-on: self-hosted
    needs: Headworks

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Switch to the specified branch and pull newest codes
      # - name: Checkout and pull
      #   run: git pull origin ${{ inputs.branch }}:${{ inputs.branch }} && git checkout ${{ inputs.branch }}

      - name: Git repo
        run: |
          git clone -b ${{ inputs.branch }} https://github.com/STOmics/StereoMap.git 
      
  
  Genrate_software_manual:
    # The type of runner that the job will run on
    runs-on: self-hosted
    needs: [Headworks, Get_software_repo]

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Copy node_modules 
      - name: Copy node_modules
        working-directory: /Users/huifang/github/build_software_manual/StereoMap
        run: cp -r $NODE_MODULES_DIR ./

      # # Replace H\&E to H&E
      - name: Replace H\&E to H&E
        working-directory: /Users/huifang/github/build_software_manual/StereoMap
        run: grep "H\\\&E" -rl --include="*.md" . | xargs  sed -i " " "s/H\\\&E/H\&E/g"

      # Runs a command to generate _book
      - name: Generate _book
        working-directory: /Users/huifang/github/build_software_manual/StereoMap
        run: gitbook build

      # Replace 
      - name: Replace 
        working-directory: /Users/huifang/github/build_software_manual/StereoMap
        run: |
          mv _book docs
          grep mark{background:#fff -rl docs | xargs sed -i '' 's/mark{background:#fff/mark{background:#fff/g'

          if [ -e docs/img/assets ]; then 
            mv docs/.gitbook docs/img 
            grep img/assets -rl docs | xargs sed -i '' 's|img/assets|img/assets|g'
          fi
  
  Upload_docs_to_github:
    # The type of runner that the job will run on
    runs-on: self-hosted
    needs: [Headworks, Get_software_repo, Genrate_software_manual]

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # - if: ${{ inputs.repo }} != ""
      - name: Upload docs to github repo
        if: ${{ inputs.repo != 'Null' }}
        working-directory: /Users/huifang/github/build_software_manual
        run: |
          git clone ${{ inputs.repo }} TmpRepo
          rm -rf TmpRepo/docs
          cp -r StereoMap/docs TmpRepo
      
      # - if: ${{ inputs.repo }} != ""
      - name: Upload docs to github repo 2
        if: ${{ inputs.repo != 'Null' }}
        working-directory: /Users/huifang/github/build_software_manual/TmpRepo
        run: |
            git add *
            git commit -m "update:"`date "+%Y%m%d%H%M%S"`
            git push
  
  # Upload_artfact:
  #   # The type of runner that the job will run on
  #   runs-on: self-hosted
  #   needs: [Headworks, Get_software_repo, Genrate_software_manual]

  #   # Steps represent a sequence of tasks that will be executed as part of the job
  #   steps:    
  #     # Upload artifact
  #     - uses: actions/upload-artifact@v4
  #       with:
  #         name: docs
  #         if: ${{ inputs.repo == 'Null' }}
  #         path: /Users/huifang/github/build_software_manual/StereoMap/docs      

  Clear_all:
    # The type of runner that the job will run on
    runs-on: self-hosted
    needs: [Headworks, Get_software_repo, Genrate_software_manual, Upload_docs_to_github ]

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Clear all tmp files
      - name: Clear all tmp files
        working-directory: /Users/huifang/github/build_software_manual
        run: |
          pwd
          rm -rf *
